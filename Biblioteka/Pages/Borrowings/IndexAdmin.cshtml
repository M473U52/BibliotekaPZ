@page
@model Biblioteka.Pages.Borrowings.IndexAdminModel

@{
    ViewData["Title"] = "BorrowingPanel";
}

@using Microsoft.AspNetCore.Identity
@inject SignInManager<BibUser> SignInManager
@inject UserManager<BibUser> UserManager

<link rel="stylesheet" href="~/css/Shared/action_buttons.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/Shared/table_style.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/Shared/notification_style.css" asp-append-version="true" />

<div>
    <partial name="_UnderHeaderBorrowing" />

    <div class="search_div">
        <form method="get" asp-page="./Index">
            <input type="text" placeholder="Wyszukaj wypożyczenie" name="SearchTerm" value="@Model.SearchTerm">
            <button type="submit">
                <i class="fas fa-search"></i>
            </button>
        </form>
    </div>

    <dialog id="delete_borrowing_dialog">
        <i class="fa-solid fa-circle-xmark dialog-exit"></i>
        <form method="post" asp-page-handler="DeleteBorrowing">
            <input type="hidden" name="borrowingId" value="1">
            <p class="dialog_header">Usuwanie wypożyczenia</p>
            <p class="dialog_content">Czy napewno chcesz usunąć te wypożyczenie ?</p>
            <div class="d-flex flex-row justify-content-center align-items-center">
                <button type="button" class="action-button action-cancel"><i class="fa-solid fa-xmark"></i>Anuluj</button>
                <button type="submit" class="action-button action-delete"><i class="fa-solid fa-trash-can"></i>Usuń</button>
            </div>   
        </form>
    </dialog>

    <dialog id="confirmation_borrowing_dialog">
        <i class="fa-solid fa-circle-xmark dialog-exit"></i>
        <form method="post" asp-page-handler="ConfirmBorrowing">
            <input type="hidden" name="borrowingId" value="1">
            <p class="dialog_header">Potwierdzenie wypożyczenia</p>
            <p class="dialog_content">Czy napewno chcesz potwierdzić te wypożyczenie ?</p>
            <div class="d-flex flex-row justify-content-center align-items-center">
                <button type="button" class="action-button action-cancel"><i class="fa-solid fa-xmark"></i>Anuluj</button>
                <button type="submit" class="action-button action-confirm"><i class="fa-solid fa-check"></i>Potwierdź</button>
            </div>
        </form>
    </dialog>

    <dialog id="confirmation_return_dialog">
        <i class="fa-solid fa-circle-xmark dialog-exit"></i>
        <form method="post" asp-page-handler="ConfirmReturn">
            <input type="hidden" name="borrowingId" value="1">
            <p class="dialog_header">Potwierdzenie zwrotu</p>
            <p class="dialog_content">Czy napewno chcesz potwierdzić zwrot tej książki ?</p>
            <div class="d-flex flex-row justify-content-center align-items-center">
                <button type="button" class="action-button action-cancel"><i class="fa-solid fa-xmark"></i>Anuluj</button>
                <button type="submit" class="action-button action-confirm"><i class="fa-solid fa-check"></i>Potwierdź</button>
            </div>
        </form>
    </dialog>

    <dialog id="confirmation_payment">
        <i class="fa-solid fa-circle-xmark dialog-exit"></i>
        <form method="post" asp-page-handler="ConfirmPayment">
            <input type="hidden" name="borrowingId" value="1">
            <p class="dialog_header">Potwierdzenie opłaty</p>
            <p class="dialog_content">Czy napewno chcesz potwierdzić opłatę za tą książkę ?</p>
            <div class="d-flex flex-row justify-content-center align-items-center">
                <button type="button" class="action-button action-cancel"><i class="fa-solid fa-xmark"></i>Anuluj</button>
                <button type="submit" class="action-button action-confirm"><i class="fa-solid fa-check"></i>Potwierdź</button>
            </div>
        </form>
    </dialog>

    <div class="table_div table-responsive">
        <table class="table table-striped text-center">
            <thead class="table-header-style">
                <tr>
                    <th class="align-middle">
                        @Html.DisplayName("Czytelnik")
                    </th>
                    <th class="align-middle">
                        @Html.DisplayName("Tytuł")
                    </th>
                    <th class="align-middle">
                        @Html.DisplayNameFor(model => model.Borrowing[0].borrowDate)
                    </th>
                    <th class="align-middle">
                        @Html.DisplayNameFor(model => model.Borrowing[0].plannedReturnDate)
                    </th>
                    <th class="align-middle">
                        @Html.DisplayNameFor(model => model.Borrowing[0].returnDate)
                    </th>
                    
                    
                    @if (User.IsInRole("Employee"))
                    {
                        <th class="align-middle">
                            @Html.DisplayNameFor(model => model.Borrowing[0].Confirmation)
                        </th>
                        <th class="align-middle">
                            @Html.DisplayNameFor(model => model.Borrowing[0].IsReturned)
                        </th>
                        <th class="align-middle">
                            @Html.DisplayNameFor(model => model.Borrowing[0].IsPaid)
                        </th>
                    }
                    <th class="align-middle">Akcja</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Borrowing)
                {
                    <tr>
                        <td class="align-middle td_reader_name">
                            @foreach (var reader_borrowId in Model.Reader_Borrowings)
                            {
                                if (item.borrowId == reader_borrowId.borrowId)
                                {
                                    @foreach (var readerModel in Model.Readers)
                                    {
                                        if (reader_borrowId.readerId == readerModel.readerId)
                                        {
                                            @readerModel.FullName
                                        }
                                    }
                                }
                            }
                        </td>
                        <td class="align-middle td_book_title">
                            @Html.DisplayFor(modelItem => item.book.title)
                        </td>
                        <td class="align-middle td_borrow_date">
                            @item.borrowDate.ToString("dd.MM.yyyy")
                        </td>
                        <td class="align-middle">
                            @item.plannedReturnDate.ToString("dd.MM.yyyy")
                        </td>
                        <td class="align-middle">
                            @item.returnDate?.ToString("dd.MM.yyyy\nHH:MM")               
                        </td>    
                        @if (User.IsInRole("Employee"))
                        {
                            <td class="align-middle">
                                @if (item.book.availableCopys <= 0)
                                {
                                    <div>Brak kopii</div>
                                }
                                else if (item.book.availableCopys > 0 && !item.Confirmation)
                                {
                                    <button class="action-button action-confirm borrowing_confirmation_button"><i class="fa-solid fa-check"></i>Potwierdź<p class="hidden-borrowId d-none">@item.borrowId</p></button>
                                }
                                else
                                {
                                    <div>Potwierdzony</div>
                                }
                            </td>
                            <td class="align-middle">
                                @if (item.bookLost)
                                {
                                    <div>Książka zgubiona</div>
                                }
                                else if (!item.IsReturned && item.Confirmation)
                                {
                                    <button class="action-button action-confirm book_return_button"><i class="fa-solid fa-check"></i>Potwierdź<p class="hidden-borrowId d-none">@item.borrowId</p></button>

                                }
                                else if (!item.Confirmation && !item.IsReturned)
                                {
                                    <div>Brak dostępu</div>
                                }

                                else
                                {
                                    <div>Potwierdzony</div>
                                }
                            </td>
                            <td class="align-middle">
                                @if (!item.IsPaid && (item.bookLost || (item.IsReturned && item.Confirmation && item.LateFee > 0)))
                                {
                                    <p style="margin-bottom:0.4rem;" class="additional_payment_p">Dodatkowa opłata</p>
                                    <button class="action-button action-confirm payment_confirm_button"><i class="fa-solid fa-check"></i>Potwierdź<p class="hidden-borrowId d-none">@item.borrowId</p></button>
                                }
                                else if (item.IsPaid || item.LateFee <= 0)
                                {
                                    <div>Brak</div>
                                }
                                else
                                {
                                    <div>Brak dostępu</div>
                                }      
                            </td>
                        }
                        <td class="align-middle">
                            <button class="action-button action-delete"><i class="fa-solid fa-trash-can"></i>Usuń<p class="hidden-borrowId d-none">@item.borrowId</p></button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        @if (!Model.Borrowing.Any())
        {
            <img src="~/images/noborrows.jpg" class="position-relative h-auto w-100" />
        }
    </div>
    @{
        if (TempData["Message"] != null)
        {
            <div class="notification_div">
                @if (TempData["Message"]?.ToString()?.Split("/")[0] == "Success")
                {
                    <div>
                        <i class="fa-solid fa-check success_notification_icon"></i>
                    </div>
                }
                else
                {
                    <div>
                        <i class="fa-solid fa-circle-exclamation error_notification_icon"></i>
                    </div>
                }
                <div class="notification-content">
                    @if (TempData["Message"]?.ToString()?.Split("/")[0] == "Success")
                    {
                        <p class="notification-header-success">Sukces!</p>
                    }
                    else
                    {
                        <p class="notification-header-error">Błąd!</p>
                    }
                    <p class="notification-message">@TempData["Message"]?.ToString()?.Split("/")[1]</p>
                </div>
                <div class="hide-notification">
                    <i class="fa-solid fa-xmark"></i>
                </div>
            </div>
        }
    }
</div>
<script src="~/js/Borrowing/ModalDialogRunner.js"></script>
<script src="~/js/Borrowing/Notification.js"></script>