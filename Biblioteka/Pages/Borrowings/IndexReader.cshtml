@page
@model Biblioteka.Pages.Borrowings.IndexReaderModel

@{
    ViewData["Title"] = "Index";
}
@using Microsoft.AspNetCore.Identity

<link rel="stylesheet" href="~/css/Borrowings/index_admin.css" asp-append-version="true" />

<div>
    <partial name="_UnderHeaderBorrowing" />

    <dialog id="delete_borrowing_dialog">
        <i class="fa-solid fa-circle-xmark dialog-exit"></i>
        <form method="post" asp-page-handler="CancelBorrowing">
            <input type="hidden" name="borrowingId" value="1">
            <p class="dialog_header">Anulowanie wypożyczenia</p>
            <p class="dialog_content">Czy napewno chcesz anulować te wypożyczenie ?</p>
            <div class="d-flex flex-row justify-content-center align-items-center">
                <button type="button" class="action-button action-cancel"><i class="fa-solid fa-xmark"></i>Nie, wróc</button>
                <button type="submit" class="action-button action-delete"><i class="fa-solid fa-trash-can"></i>Tak, anuluj</button>
            </div>
        </form>
    </dialog>

    <div class="table_div table-responsive">
        <table class="table table-striped text-center">
            @if(Model.Borrowing.Count != 0)
            {
                <thead class="table-header-style">
                    <tr>
                        <th class="align-middle">
                            @Html.DisplayName("Tytuł")
                        </th>
                        <th class="align-middle">
                            @Html.DisplayNameFor(model => model.Borrowing[0].borrowDate)
                        </th>
                        <th class="align-middle">
                            @Html.DisplayNameFor(model => model.Borrowing[0].plannedReturnDate)
                        </th>
                        <th class="align-middle">
                            @Html.DisplayNameFor(model => model.Borrowing[0].returnDate)
                        </th>
                        <th class="align-middle">Akcja</th>
                    </tr>
                </thead>
            }
            <tbody>
                @foreach (var item in Model.Borrowing)
                {
                    <tr>
                        <td class="align-middle td_book_title">
                            @Html.DisplayFor(modelItem => item.book.title)
                        </td>
                        <td class="align-middle td_borrow_date">
                            @item.borrowDate.ToString("dd.MM.yyyy")
                        </td>
                        <td class="align-middle">
                            @item.plannedReturnDate.ToString("dd.MM.yyyy")
                        </td>
                        <td class="align-middle">
                            @item.returnDate?.ToString("dd.MM.yyyy\nHH:MM")
                        </td>
                        <td class="align-middle">
                            <button class="action-button action-delete"><i class="fa-solid fa-trash-can"></i>Anuluj<p class="hidden-borrowId">@item.borrowId</p></button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        @if (!Model.Borrowing.Any())
        {
            <img src="~/images/noborrows.jpg" class="position-relative h-auto w-100" />
        }
    </div>
    @{
        if (TempData["Message"] != null)
        {
            <div class="notification_div">
                @if (TempData["Message"]?.ToString()?.Split("/")[0] == "Success")
                {
                    <div>
                        <i class="fa-solid fa-check success_notification_icon"></i>
                    </div>
                }
                else
                {
                    <div>
                        <i class="fa-solid fa-circle-exclamation error_notification_icon"></i>
                    </div>
                }
                <div class="notification-content">
                    @if (TempData["Message"]?.ToString()?.Split("/")[0] == "Success")
                    {
                        <p class="notification-header-success">Sukces!</p>
                    }
                    else
                    {
                        <p class="notification-header-error">Błąd!</p>
                    }
                    <p class="notification-message">@TempData["Message"]?.ToString()?.Split("/")[1]</p>
                </div>
                <div class="hide-notification">
                    <i class="fa-solid fa-xmark"></i>
                </div>
            </div>
        }
    }
</div>
<script src="~/js/Borrowing/ModalDialogRunner.js"></script>
<script src="~/js/Borrowing/Notification.js"></script>