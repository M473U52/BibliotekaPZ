@page
@model Biblioteka.Pages.Borrowings.CreateModel

@{
    ViewData["Title"] = "Create";
}
@using Microsoft.AspNetCore.Identity

<div class="main_container">
    <div class="inner_container">
        <div class="list_header">
            <h1>Wypożyczenie książki: <b>@Model.Book.title</b></h1>
        </div>
        <div class="form_div">
            <div class="form_div_login">
                <form method="post" onsubmit="return validateDate()">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="Borrowing.borrowDate" class="control-label"></label>
                        <input asp-for="Borrowing.borrowDate" class="form-control" id="borrowDate" />
                        <span asp-validation-for="Borrowing.borrowDate" class="text-danger"></span>
                    </div>
                    <div class="form-group">

                        <input type="button" value="Dodaj do listy wypożyczeń" class="button buttonGreen" onclick="addToBasket('@Model.Book.bookId', document.getElementById('borrowDate').value, '@Model.Book.title')" />
                        <button type="button" id="redirectToBasketButton" class="button buttonGreen" onclick="addAndRedirect('@Model.Book.bookId', document.getElementById('borrowDate').value, '@Model.Book.title')">Dodaj i przejdź do finalizacji</button>
                        <div>
                            <a class="lightText button buttonDefault" asp-page="../Books/Index">Wróć</a>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>

        var basket = JSON.parse(sessionStorage.getItem('basket')) || [];

        function addToBasket(bookId, borrowDate, title) {
            console.log("hello")
            console.log("here", borrowDate)
            if (!validateDate()) {
                console.log("not valid date")
                return;
            }

            if (basket.some(item => item.bookId === bookId)) {
                alert('Książka już jest w koszyku.');
                return;
            }

            if (basket.length >= 5) {
                alert('Koszyk jest pełny. Możesz dodać maksymalnie 5 książek.');
                return;
            }

            basket.push({ book: {bookId: bookId, title: title} });
            alert('Książka dodana do koszyka.');
            console.log(basket);

            // zapisz do session storage
            sessionStorage.setItem('basket', JSON.stringify(basket));
            console.log(sessionStorage.getItem('basket'));
        }
        function validateDate() {
            var today = new Date();
            var selectedDate = new Date(document.getElementById('borrowDate').value);
            if (selectedDate < today) {
                alert("Data wypożyczenia nie może być wcześniejsza niż dzisiejsza data.");
                return false;
            }
            return true;
        }

        function addAndRedirect(bookId,borrowDate, title) {
            console.log("here", borrowDate)
            addToBasket(bookId, borrowDate, title);
            window.location.href = '/Basket/Index';
        }
    </script>
}
